using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public enum Stat 
{
	// DO NOT REORDER. UNITY DOES NOT FIX UP ENUM INSERTIONS
	MAX_HEALTH,
	MOVE_SPEED,
	ATTACK_SPEED,
	ATTACK_DAMAGE,

	MELEEZONE_SIZE,

	INHERENT_RESISTANCE_MULTIPLIER,

	// Earth - Mash'em good
	ATTACK_AOE_SIZE,
	ATTACK_DAMAGE_PER_ENEMY_IN_MELEE_ZONE,

	// Holy - monk combos
	ATTACK_DAMAGE_PER_COMBO,
	ATTACK_SPEED_PER_COMBO,
	DAMAGE_MULTIPLIER_PER_COMBO,

	// Air - crits
	CRITICAL_CHANCE,
	CRITICAL_DAMAGE,

	// Water - chains and clumping
	CHAIN_COUNT_MULTIPLIER,
	// See CHAIN_GAP_MULTIPLIER below
	WATER_DEBUFF_CLUMP,

	// Fire - rage!
	ATTACK_DAMAGE_PER_SECOND_ATTACKING,
	RELENTLESS_MULTIPLIER, 


	DAMAGE_MULTIPLIER_MELEE,
	DAMAGE_MULTIPLIER_RANGED,

	DAMAGE_MULTIPLIER_PHYSICAL,
	DAMAGE_MULTIPLIER_HOLY,
	DAMAGE_MULTIPLIER_UNHOLY,
	DAMAGE_MULTIPLIER_FIRE,
	DAMAGE_MULTIPLIER_EARTH,
	DAMAGE_MULTIPLIER_AIR,
	DAMAGE_MULTIPLIER_WATER,

	DAMAGE_MULTIPLIER_FIRST_ELEMENT = DAMAGE_MULTIPLIER_PHYSICAL,
	DAMAGE_MULTIPLIER_LAST_ELEMENT = DAMAGE_MULTIPLIER_WATER,

	DAMAGE_MULTIPLIER,

	CHAIN_GAP_MULTIPLIER,

	STUN_TIME,
	DAMAGE_MULTIPLIER_IN_MELEE_ZONE, // Only really makes sense for ranged characters, with the overlap

	ATTACK_DAMAGE_PER_ZOMBIE_ALLY,

	HEAL_MULTIPLIER,

	ENEMY_TIMESCALE,
	PLAYER_TIMESCALE,

	VAMPIRISM,

	ATTACK_DAMAGE_ABSOLUTE, // Not a percentage

	ATTACK_DAMAGE_ON_STUNNED_ENEMIES,
}

public static class Stats
{
	public static Stat GetStatForDamageMultiplier(this Element element)
	{
		return (Stat)((int)Stat.DAMAGE_MULTIPLIER_FIRST_ELEMENT + (int)element);
	}
}
